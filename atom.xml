<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Jas0ndyq]]></title>
  <subtitle><![CDATA[This is for everyone]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://jas0n.me/"/>
  <updated>2015-06-20T13:51:14.364Z</updated>
  <id>http://jas0n.me/</id>
  
  <author>
    <name><![CDATA[Jas0ndyq]]></name>
    <email><![CDATA[jasondyq@foxmail.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[平等、认真和互联网]]></title>
    <link href="http://jas0n.me/2015/06/03/%E5%B9%B3%E7%AD%89%E3%80%81%E8%AE%A4%E7%9C%9F%E5%92%8C%E4%BA%92%E8%81%94%E7%BD%91/"/>
    <id>http://jas0n.me/2015/06/03/平等、认真和互联网/</id>
    <published>2015-06-03T11:50:48.000Z</published>
    <updated>2015-06-03T11:57:45.000Z</updated>
    <content type="html"><![CDATA[<p>有几个月没有更新博客了，因为实在没有什么可以分享的。这几个月看了几本书，听了许多故事，也想到了事业、人性、情怀、家国。其实关于技术的东西接触得越多，看到不合理的东西就越多。时常在想，为什么那些打着以人民满意度为核心的组织机构并不那么真的在意他们的“核心”。<br><a id="more"></a></p>
<p>比如，一个考驾照的考场，居然需要4点钟早起排队约号。<br><img src="http://ww2.sinaimg.cn/large/a08ac493gw1esr4t56l00j20qo0zkmzm.jpg" alt=""><br>一个约考系统都做到了可以直接刷身份证、刷指纹验证的功能，为什么不直接上线网络，继续解决“最后一公里的问题”呢？不敢妄谈原因，因为我也知道，有的问题不是技术不能解决，而是有的人根本不愿意解决。如果要谈，就开得大了，涉及到社会学、心理学还有政治、经济的问题。所以，还是说一些小的我能谈的问题吧，当是记录一下想法，也当梳理一下思路。</p>
<h1 id="平等">平等</h1>
<p>都说互联网时代的到来使得信息的传播更加扁平化，而且不论是信息的发布还是信息的接收都趋向于扁平。但这种观点的前提是这些信息的受众是能够接触互联网的人，这就会出现一个我们必须思考的问题——在互联网时代，那些不能接触互联网的人该怎么发布和接收信息。</p>
<p>我并不想谈论传统信息传播方式与互联网的优劣，也不想去和那些认为“不懂得使用互联网的人就不该使用互联网”的人争论。我想说的是不论是国家、组织还是个人都应该保障人体使用互联网的权利，ITU的秘书长这样强调互联网对于个人参与的重要性——“我们已经进入了知识社会，每个人都必须拥有参与的入口”。</p>
<p>我们肯定都有教我们的长辈使用电脑或者手机的经历。今年年初，我的外公准备换一部手机，当时全家人都让他换一部传统的功能机，因为字大、功能简单，老人很容易上手。而我开始也是这么认为的，但是外公却一直想买一部智能手机用来看新闻，因为他看着他的孙子孙女一天到晚玩手机玩得天昏地暗。。。出于情怀，我也就陪着外公上街去看了他想要的那款手机。这里有个有趣的地方，外公一个人去看的时候由于不会玩，也不敢怎么把玩那个手机，小城市的营业员当然不会耐心的为一个老人讲解。我陪着外公去到店里的时候，外公就让我教他怎么看新闻，我就给他讲了该怎么打开，怎么滑动（初次使用触屏智能机的人对于滑动的操作就相当于初次使用电脑的人对点击鼠标的操作，感受都是“害怕”和“惊奇”吧）。当时我无意中观察了外公的表情，就像小孩子拿到了一个神奇的玩具一样，外公嘴里还在念叨，“咦，这个还是要得呀！”。当时，我很受感动，真的，看到一个历经沧桑的老人能够这样新奇地使用我们这个时代的最伟大的技术的时候，真的大为感动。然后，我们就买下了那台手机，回家我又教了他怎么用微信和别人视频，怎么看本地的新闻，怎么看天气看农历。虽然老人忘得很快，但是忘了就再教，忘了就再教，这本身不是什么技术，只需要熟练，耐着性子多教几次也就记住了。有一条微博这样写的“教你的妈妈用手机的时候，多点耐心吧，因为小时候她曾经那样教你拿过筷子”。</p>
<p>互联网真的太美好了，我也太希望每一个人都有这样的权利使用它。应该说，每一个人都平等的享有使用互联网的权利，这种平等和人权一样，是时代赋予的。那么，阻碍平等使用的无非是两个方面：</p>
<ol>
<li>基础设施</li>
<li>学习途径</li>
</ol>
<h2 id="基础设施">基础设施</h2>
<p>我们的国家宽带速度的水准已经惊动了“总理”，但运营商对上对下都忽悠的态度真的让人心寒。几个月前，我曾想要是我工作了，我一定要做一个项目，在那些贫穷的西部农村建立以村为单位的WiFi网络，再通过培训当地有知识的村民逐步让那些愿意接触使用互联网的人接入网络。可能这个想法不太现实，但是成都以及几个大城市已经在这么做了，国家也已经提出了相关战略，力图改变贫困地区的面貌。但是，我们都没有考虑到的一点就是，这些地方的人民太穷了，真的太穷了，以现在得无线宽带资费，是没有多少贫困农村家庭愿意使用的。所以，这样的项目除了国家缓慢的推进，恐怕只要交由公益组织来做了吧。<br>这方面我的一点初步的设想是，由NGO组织出面，在个别贫困山区农村进行试点，免费提供带宽合适的WiFi网络，通过与国内手机等智能终端厂家合作进行公益智能设备的售卖，以“家电下乡”的厂家补贴商家的方式推动“智能手机”下乡。对于有地方特产的农村，可以使用电商众筹平台销售地方特产。。。这时候，又有人要来批评了，“假大空”，谁愿意去做这种吃力不讨好的事情啊。说得也对，这种事情除了国家出政策鼓励这么做，就只能用情怀了，嗯，情怀。</p>
<h2 id="学习途径">学习途径</h2>
<p>前些天有这样一条微博：<br><img src="http://ww4.sinaimg.cn/large/a08ac493gw1esqzc98a9nj20jz0zk76q.jpg" alt=""><br>当时我看了也是略难受的，忽略上镜评论的那位同学，不谈学校怎么样。我们的国家还有多少人不会使用互联网，有多少人从没有接触过电脑。智能手机的时代增加了一大批的“网民”（其实我并不愿意使用“网民”这个词语，网络不过是一种工具而已，就像农民的镰刀锄头而已）。但是还有很多很多的人并不会使用网络，而又怎么去发送一条他们可能听都没听说过的伊妹儿呢？</p>
<p>这些不懂得互联网的人就真的是不喜欢它吗？你有看到过曾经天天说孩子别玩手机等到自己有了智能机也成天就玩的父母吗？有机会去看看春运排队买票的农民工吧，他们不会抢票，甚至都不会在网上买票。营销学认为用户根本不知道他们需要什么，所以，我们也应该多“忍气吞声”一点，像传教一样，多给那些没有接触过互联网的父母长辈说说时代的变化，即使他们不用，也让他们知道还有一个叫做网络的东西，能够带给这个世界那么大的影响。</p>
<h2 id="平等-1">平等</h2>
<p>我特别在乎基于互联网的平等，因为我了解它，知道互联网对于个体的意义。在互联网时代下，凭什么我们国家贫困农村的孩子不能玩和城里孩子一样的游戏，凭什么无数的农民工还要排几天的队为了买一张回家的车票。无意追求一个绝对平等的社会，那样的社会只会低效而落后。我只是希望那些人们能够有那些基本的权利罢了。这基础上包含着国家、亲情、互助和一个大学生的人文情怀。</p>
<h1 id="认真">认真</h1>
<p>今天听了两个创业者的故事，他们提到创业者要具备的品质之一就是认真。虽然说得是创业，但推而广之，做任何事情，认真都是一项重要的品质。<br>昨天，池建强的公众号推了一篇文章——<a href="http://mp.weixin.qq.com/s?__biz=MjM5ODQ2MDIyMA==&amp;mid=206544201&amp;idx=1&amp;sn=d0f18bbbe6696e047e3eca6bf88b4b72#rd" target="_blank" rel="external">你是能长时间集中注意力的人吗？</a>，其实说到集中注意力也就是认真。</p>
<p>那篇文章提到了看书还有编程，这两项活动都是需要认真才能够完成的。看书，需要集中时间和注意力去领会书中的东西，往往带入自己的情感的书收获会更大，编程也是一样，一个bug不论多奇怪都是可以解决的，但往往需要不断地去查资料找文档，去试错才能够解决。</p>
<p>无奈的是在现在的大学，除了刷题的学霸外，我们还能找得到几个人在认真地做他们的事情。这点上看，学霸似乎还是挺厉害的，至少他们能够专注在自己的事情上。</p>
<p>“好的事物，永远是需要我们长时间集中注意力对待。”，我最近在写一个网站，已经准备发布了，但是突然想到了有的重点功能还没有搞出来索性不发布了，慢慢做，只为了自己开心就好。自己能力有限，也做不出来厉害的东西，但是真的好享受去创造一个东西的过程。往往自己看到自己做的东西都是看到最烂的一面，即便如此，也很高兴。希望以后在工作中，能够为了改变这个世界认真地做事。像老罗一样，不为什么，只是认真。</p>
<h1 id="互联网">互联网</h1>
<p>互联网在我们国家发展的这些年，给国家和我们个人带来的不只是社交网络那么简单。</p>
<h2 id="民主">民主</h2>
<p>互联网影响着我们的方方面面，甚至是政治。<br>以前，个体的言论是毫无意义的，尤其是一个默默无闻的人的言论。但是在今天，每一个人不同观点都可能是一场论战的导火索。现实世界中的“左”、“右”的帽子早就在互联网上扣开了，“五毛”和“公知”在网络上展开了激烈的“斗争”。这其实是好的，不是吗？在一个大家观点都一致的政治环境中，有不同的观点总是好的。<br>以前，高高在上的政府领导总是脑袋一热制定出一个什么政策，也会象征性地开个什么听证会，但这一切都与老百姓无关。现在，可能他们不太敢那么做了，政府也在意着自己的名声，虽然是在一个高墙中的名声。</p>
<p>我一直认为，当前中国的民主必定是始于互联网的。这完全是一种倒逼，中国历来愚民，但互联网使得现在的当权者必须考虑新形式下的政策制定和执行。</p>
<h2 id="自由">自由</h2>
<p>互联网是自由的，现在能够坐在计算机前敲下自己的想法完全源于这项至伟的发明。</p>
<p>谈到自由不能回避的一个话题就是国家的网络防火墙。</p>
<p>每逢六四这种日子，墙总会被砌得又高又坚，以至于维基百科这样的网站都会被挡在外面。而这并不是智慧的决策，“防民如防川”，防川又得“疏”不可“堵”。屏蔽这样的网站除了引来各方吐槽和一堆骂名外，别无用处。</p>
<p>对于个体而言，网络审查的存在并不意味着必须全盘接受，我们有着无数的手段去突破长城。但是之后，你是想干什么。开放的网络也就会出现各种小道消息，分辨是非就变得尤为重要。说到底，还是得不断提高自己的姿势水平，才能不被任何一方所左右。</p>
<h1 id="总">总</h1>
<p>“这是最好的时代，也是最坏的时代。”感谢前人给我们带来的这些改变时代的礼物，愿我们每一个人能够过得幸福，愿自由之旗永远飘扬。</p>
<p><strong>禾火</strong><br>写于六四前夕<br>2015年6月3日</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>有几个月没有更新博客了，因为实在没有什么可以分享的。这几个月看了几本书，听了许多故事，也想到了事业、人性、情怀、家国。其实关于技术的东西接触得越多，看到不合理的东西就越多。时常在想，为什么那些打着以人民满意度为核心的组织机构并不那么真的在意他们的“核心”。<br>]]>
    
    </summary>
    
      <category term="想法" scheme="http://jas0n.me/tags/%E6%83%B3%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[2014这一年]]></title>
    <link href="http://jas0n.me/2014/12/31/2014to2015/"/>
    <id>http://jas0n.me/2014/12/31/2014to2015/</id>
    <published>2014-12-31T09:16:16.000Z</published>
    <updated>2014-12-31T09:17:42.000Z</updated>
    <content type="html"><![CDATA[<p>题目搞得像报告一样，哈哈哈。</p>
<h1 id="今年">今年</h1>
<p>简单总结一下自己的事情。</p>
<h3 id="看书">看书</h3>
<p>我始终是一个没有什么文化的人，看的书太少了，今年总的看的书不过10来本。有土家野夫的系列作品，有我感兴趣的社会学著作《乌合之众》和《叫魂》，还有余华的《活着》和《第七天》，看不懂的高行健著之《灵山》。当然为了滥竽充数，我还把几本技术术算上了，哈哈哈。（诶，感觉自己是个文盲）</p>
<a id="more"></a>

<h3 id="技能">技能</h3>
<p>这一年，学习了Python程序设计，学习了JavaScript程序设计，也学习了Linux基础，还有网站建设和Photoshop工具使用。都是略知皮毛，未来还有很长的路要走。一路学下来最大的感受就是兴趣才是最好的老师。</p>
<h3 id="思想">思想</h3>
<p>这一年无疑是我思想上最为动荡的一年。</p>
<p>一直以来，我以共产主义信仰来表达自己的政治观点。一直以来，我也看不惯现在中共的某些行为。但在很长的一段时间内，我都是认为这只是我党在历史道路上的一种倒退而非长久之作为。我深信不疑的是我是一个共产主义的拥趸，直到今年下半年的某些事件。</p>
<p>我指的就是互联网。毫无疑问，每一个国家都在管理自己的互联网，甚至是监控人民的通信。但是，像这样对互联网管理如此严格的现代国家，除了中国，别无其他。朝鲜？它不是一个现代国家。我一度相信，政府加强互联网的管理是必须的，是必要的，也是科学的。但没有触及到自己的利益，我当然会这样认为。而当这些所谓的政策影响到我的生活的时候，我必然会做出反思。</p>
<p>当我的想用谷歌搜索一个简单的维基词条的时候，我不应该是先去修改hosts文件，更不是应该去学习如何在服务器上反向代理一个谷歌的服务。我想能够直接在浏览器中输入我的关键字，然后就迅速的出来结果。</p>
<p>后来，他们开了一个世界互联网大会，我以为这是一个国家将会逐步放开网络的信号。可惜，我错了，前几天Gmail彻底失联。一个邮件服务到底会对这个国家带来多大的灾难以至于让上面谈之色变。我知道，我朝的精英阶层早已习惯了这种政策，他们十分老成地告诫我们这些人，逆来顺受，没有办法的。</p>
<p>是啊，没有办法的。在这样一个看到了屁大的官员来视察就会激动地跪舔的氛围里，在你——公民，需要担心是否有警察随随便便就把你抓走，把你踩在地上等死的氛围里。</p>
<p>然后，我变了。我一直知道，我做不了中庸主义，我所喜欢的和厌恶的一向分明而又对立。</p>
<p>我还要谢谢我的一位老师，一位不卑不亢，看不起美分和公知，也不会接受专制招安的默默无闻的自由主义者。然后，我的追求变得那么理性而又感性。不是谁都能做到“我只承认真理和逻辑”的大气。你们这些知识分子难道不应该这样吗？不管你是一个共产主义的战士，还是一个自由主义的新人，你都应该就事论事，遵循逻辑。这些，无关国家，无关信仰。而由此，才可辨明真理。</p>
<p>所以，我不应该去看美国的民主和人权做得怎么样，不应该随便就张嘴喷西方民主。</p>
<p>所以，现在看看周小平写的那篇他从一个美分变成一个五毛的文章，真是五味杂陈。当看到别人现在追求的是我曾经深信不疑的东西的时候，我是觉得如此的荒唐。</p>
<p>而最为重要的是，我自己永远不应该停止思考，因为我就想让事情是它本来该有的样子。</p>
<hr>
<h1 id="明年">明年</h1>
<p>也简单地说说明年的计划。</p>
<h3 id="读书">读书</h3>
<p>社会心理学书籍买了就该看，还有一些其他杂杂碎碎的书，争取读个20本吧。我没什么文化，也不像薇薇那样喜欢看书，20本够多了～</p>
<h3 id="技能-1">技能</h3>
<p>深入学习Python，深入学习JavaScript，学习Linux服务器运维。争取在网页设计上提高一个层次。学习树莓派的开发应用。玩玩乐高，嘻嘻。</p>
<h3 id="思想-1">思想</h3>
<p>理清楚自己的思想很重要，这样遇到问题才能按照自己的一套思维和思想基础来解决。永远不要让自己停止思考。</p>
<h1 id="最后">最后</h1>
<p>希望自己在以后的日子里做一个自由的人，永远不要装逼，永远不要停止思考。还要做一个对社会有用的人，试着让这个世界更美好。</p>
<p>2014年12月31日<br><strong>Jas0ndyq敬上</strong></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>题目搞得像报告一样，哈哈哈。</p>
<h1 id="今年">今年</h1>
<p>简单总结一下自己的事情。</p>
<h3 id="看书">看书</h3>
<p>我始终是一个没有什么文化的人，看的书太少了，今年总的看的书不过10来本。有土家野夫的系列作品，有我感兴趣的社会学著作《乌合之众》和《叫魂》，还有余华的《活着》和《第七天》，看不懂的高行健著之《灵山》。当然为了滥竽充数，我还把几本技术术算上了，哈哈哈。（诶，感觉自己是个文盲）</p>
]]>
    
    </summary>
    
      <category term="想法" scheme="http://jas0n.me/tags/%E6%83%B3%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[基于Python的天气预报“微博机器人”]]></title>
    <link href="http://jas0n.me/2014/12/19/weibo_robot/"/>
    <id>http://jas0n.me/2014/12/19/weibo_robot/</id>
    <published>2014-12-19T11:51:06.000Z</published>
    <updated>2014-12-19T11:57:56.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>好吧，说是机器人太装逼了，其实就是一个通过微博定时发送天气的python脚本。嘻嘻～</p>
</blockquote>
<p><strong>先说微博地址@w4vv <a href="http://weibo.com/w4vv" target="_blank" rel="external">http://weibo.com/w4vv</a></strong>，取”weather for vivian”之意，欢迎围观。</p>
<h1 id="开发原因">开发原因</h1>
<p>我们知道，先前已经有IFTTT为我们实现了定时的微博天气预报，为啥我还蛋疼地自己写一个呢？（当然不是为了装逼）很<strong>直接的原因</strong>就是IFTTT实现的是不可编程的静态微博天气推送，也就是，我无法根据天气的情况来发送对应的信息，比如，今天哈尔滨零下30度，IFTTT的微博脚本实现的只是单纯的报告温度，而没有对应的我对薇薇的关怀～</p>
<a id="more"></a>

<p>同时，IFTTT的微博接口没有开放到让我能够不在乎我需要@对象昵称的变化，也就是说，只要薇薇哪天一高兴换了一个昵称，我就得手动地去更改脚本，<strong>这尼玛对我来说一点都不酷</strong>，有木有！！</p>
<p>当然还有个原因是好久没写Python了，我来复习一把，为寒假玩树莓派做准备。</p>
<h1 id="基本思路">基本思路</h1>
<ol>
<li>通过微博开放平台获取微博API</li>
<li>引入天气预报API</li>
<li>编写Python脚本发送微博</li>
<li>在VPS上设定定时任务</li>
</ol>
<p><em>详细代码在这里找到：</em><br><a href="https://github.com/jas0ndyq/weibo_robot" target="_blank" rel="external">https://github.com/jas0ndyq/weibo_robot</a></p>
<h3 id="获取微博API">获取微博API</h3>
<p>首先，你需要安装微博的python集成开发工具，在<a href="http://github.liaoxuefeng.com/sinaweibopy/" target="_blank" rel="external">这里</a>，该SDK的授权说明和API调用方式可以在<a href="https://github.com/michaelliao/sinaweibopy/wiki/OAuth2-HOWTO" target="_blank" rel="external">这里</a>找到。<br>然后，你得通过微博账号登陆到<a href="http://open.weibo.com/" target="_blank" rel="external">微博开放平台</a>，创建应用并获取<code>App Secret</code> 和 <code>App Key</code>。新手指引请参见<a href="http://open.weibo.com/wiki/%E6%96%B0%E6%89%8B%E6%8C%87%E5%8D%97" target="_blank" rel="external">这个链接</a><br>需要提醒的是，这个脚本是无法通过官方进行发布的，所以，你填写的应用信息无须完整。<br>然后<strong>将你获取的值和你的微博用户名还有密码</strong>一并填入这个位置以设置脚本的全局变量</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#设置全局变量</span></div><div class="line">global api_key, api_secret, callback_url, userid, password</div><div class="line">api_key = '<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>' <span class="comment"># 请在微博开放平台获取</span></div><div class="line">api_secret = '<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>' <span class="comment">#请在微博开放平台获取</span></div><div class="line">callback_url = 'http://jas0n.me'</div><div class="line">userid = 'xxx<span class="comment">@xx.com' #微博登陆邮箱</span></div><div class="line">password = '<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>' <span class="comment">#微博登陆密码</span></div></pre></td></tr></table></figure>

<h3 id="引入天气预报API">引入天气预报API</h3>
<p>这里我使用的天气API是这个：<br><a href="http://weather.51wnl.com/weatherinfo/GetMoreWeather?cityCode=城市代码&amp;weatherType=0" target="_blank" rel="external">http://weather.51wnl.com/weatherinfo/GetMoreWeather?cityCode=城市代码&amp;weatherType=0</a> ，城市代码可以在<a href="https://github.com/jas0ndyq/weibo_robot/blob/master/city.py" target="_blank" rel="external">这里</a>找到。<br>比如，重庆的天气数据就是<br><a href="http://weather.51wnl.com/weatherinfo/GetMoreWeather?cityCode=101040100&amp;weatherType=0" target="_blank" rel="external">http://weather.51wnl.com/weatherinfo/GetMoreWeather?cityCode=101040100&amp;weatherType=0</a><br>注意到这个天气API属于json格式，需要引入json模块进行处理，代码如下：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">def checkweather(num):</div><div class="line">	site = (<span class="string">"http://weather.51wnl.com/weatherinfo/GetMoreWeather?cityCode=%s&weatherType=0"</span>) % num <span class="comment">#引入天气信息API</span></div><div class="line">	<span class="comment">#print site</span></div><div class="line">	web = urllib2.urlopen(site)</div><div class="line"></div><div class="line">	content = web.read()</div><div class="line">	data = json.loads(content)</div><div class="line"></div><div class="line">	<span class="literal">result</span> = data[<span class="string">"weatherinfo"</span>]</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">	city = <span class="literal">result</span>[<span class="string">"city"</span>]</div><div class="line">	<span class="comment">#print city</span></div><div class="line">	date_y = <span class="literal">result</span>[<span class="string">"date_y"</span>]</div><div class="line">	weather = <span class="literal">result</span>[<span class="string">"weather1"</span>]</div><div class="line">	temp = <span class="literal">result</span>[<span class="string">"temp1"</span>]</div><div class="line">	suggest = <span class="literal">result</span>[<span class="string">"index_d"</span>]</div><div class="line"></div><div class="line">	global final_temp</div><div class="line">	final_temp = city + <span class="string">"，"</span> + date_y + <span class="string">"。天气："</span> + weather + <span class="string">"，气温："</span> + temp + <span class="string">"。"</span> + suggest</div><div class="line"></div><div class="line">	<span class="comment">#print final_temp + "\n"</span></div></pre></td></tr></table></figure>

<h3 id="发送微博">发送微博</h3>
<p>通过引入code和授权，使用发送微博的API进行微博的发送。值得提出的是，我们使用<code>users/show</code>这个接口以及通过浏览器获得的我需要@对象的<code>uid</code>获取该对象的昵称<code>screen_name</code>。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#调用查询用户API</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">check_user</span><span class="params">(userid)</span>:</span></div><div class="line">  code = get_code()</div><div class="line">  token = client.request_access_token(code)</div><div class="line">  client.set_access_token(token.access_token, token.expires_in)</div><div class="line">  <span class="comment">#r = client.users.show.get(screen_name="爱薇薇")</span></div><div class="line">  <span class="comment">#print r</span></div><div class="line">  <span class="keyword">global</span> r <span class="comment">#设置全局变量以备调用</span></div><div class="line">  <span class="keyword">global</span> her_screen_name</div><div class="line">  r = client.users.show.get(uid=userid) <span class="comment">#自行获取用户唯一uid</span></div><div class="line">  her_screen_name = r[<span class="string">'screen_name'</span>] <span class="comment">#通过uid获取用户昵称</span></div><div class="line">  <span class="comment">#print her_screen_name</span></div></pre></td></tr></table></figure>

<p>你可以通过这样的方式来获取用户的<code>uid</code>，用浏览器打开该对象微博的个人资料页面：<br><img src="http://ww4.sinaimg.cn/large/005V96r9gw1enf7dy4ppmj311v0jrdrh.jpg" alt=""><br>链接地址中<code>100505</code>之后的数字就是<code>1372451215</code>就是薇薇微博的uid了，这也是每个微博账户独一无二的（数字可能不一样，请自行判断）。</p>
<p>然后就可以编写发送微博的函数了：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#发文字微博</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">weibo_text</span><span class="params">(text)</span>:</span></div><div class="line">  <span class="comment">#post构造的数据获取code</span></div><div class="line">  code = get_code()</div><div class="line"></div><div class="line">  <span class="comment">#获取授权令牌和期限</span></div><div class="line">  token = client.request_access_token(code)</div><div class="line">  client.set_access_token(token.access_token, token.expires_in)</div><div class="line"></div><div class="line">  <span class="comment">#发微博</span></div><div class="line">  client.statuses.update.post(status=text)</div></pre></td></tr></table></figure>

<p><strong>最后，统一调用函数进行发布</strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">#调用城市代码和微博名并发送微博</div><div class="line">checkweather(city_num[<span class="string">"haerbing"</span>])</div><div class="line"></div><div class="line">if __name__ == <span class="string">'__main__'</span>:</div><div class="line">  <span class="array">#checkweather</span>(city_num[<span class="string">"chengdu"</span>])</div><div class="line">  check_user(<span class="number">1372451215</span>) </div><div class="line">  weibo_text(final_temp + <span class="string">" @"</span> + her_screen_name)</div><div class="line">  <span class="array"># weibo</span>_text(<span class="string">"test"</span>)</div><div class="line">  <span class="array"># weibo</span>_pic(<span class="string">'发布图片微博'</span>, <span class="string">'/home/jasondyq/test/test.png'</span>)</div><div class="line"></div><div class="line"></div><div class="line">checkweather(city_num[<span class="string">"chengdu"</span>])</div><div class="line"></div><div class="line">if __name__ == <span class="string">'__main__'</span>:</div><div class="line">  <span class="array">#checkweather</span>(city_num[<span class="string">"chengdu"</span>])</div><div class="line">  check_user(<span class="number">2693448851</span>)</div><div class="line">  weibo_text(final_temp + <span class="string">" @"</span> + her_screen_name)</div><div class="line">  <span class="array"># weibo</span>_text(<span class="string">"test"</span>)</div><div class="line">  <span class="array"># weibo</span>_pic(<span class="string">'发布图片微博'</span>, <span class="string">'/home/jasondyq/test/test.png'</span>)</div></pre></td></tr></table></figure>

<p>保存退出，运行下这个py程序吧，你会发现这样的效果：<br><img src="http://ww1.sinaimg.cn/large/005V96r9gw1enf7j2b2kpj30j003kmxd.jpg" alt=""><br>大功告成，ohyeah~</p>
<h3 id="自动化运行">自动化运行</h3>
<p>我们使用linux上的自动运行工具<code>crontab</code>进行脚本的自动执行。我选择在我的VPS上实现这一功能，当然，如果你能保证你的电脑在你需要执行脚本的时候开机，在自己的PC上运行也是可行的。</p>
<p><code>crontab</code>命令的属于一个linux底层的自动化命令，格式类似这样<code>0 */12 * * * 执行命令</code>，一共五个值，你可以在<a href="http://tool.lu/crontab/" target="_blank" rel="external">这个站点</a>进行编辑并查询执行时间。<br><code>crontab -l</code>命令：查询当前调度的脚本<br><code>crontab -e</code>命令：编辑时间调度。<br>这里，我们应该进行编辑调度，我需要每天早上8点自动执行该脚本，故我这样写：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor"># daemon's notion of time and timezones.</span></div><div class="line"><span class="preprocessor">#</span></div><div class="line"><span class="preprocessor"># Output of the crontab jobs (including errors) is sent through</span></div><div class="line"><span class="preprocessor"># email to the user the crontab file belongs to (unless redirected).</span></div><div class="line"><span class="preprocessor">#</span></div><div class="line"><span class="preprocessor"># For example, you can run a backup of all your user accounts</span></div><div class="line"><span class="preprocessor"># at 5 a.m every week with:</span></div><div class="line"><span class="preprocessor"># 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/</span></div><div class="line"><span class="preprocessor">#</span></div><div class="line"><span class="preprocessor"># For more information see the manual pages of crontab(5) and cron(8)</span></div><div class="line"><span class="preprocessor">#</span></div><div class="line"><span class="preprocessor"># m h  dom mon dow   command</span></div><div class="line"><span class="number">0</span> <span class="number">8</span>/<span class="number">24</span> * * * python /root/pyapp/weibo_robot/weibo_robot.py</div></pre></td></tr></table></figure>

<p>需要注意的一点是，得注意你的系统时间。使用<code>date</code>命令查询VPS的时区和你需要的时区是否一致，这也是<code>crontab</code>命令会执行错误的一个点了。（调整时区请参见<a href="http://www.cnblogs.com/h2appy/archive/2008/11/27/1342029.html）" target="_blank" rel="external">http://www.cnblogs.com/h2appy/archive/2008/11/27/1342029.html）</a></p>
<h1 id="最后的一点感想">最后的一点感想</h1>
<p>今年的最后一个程序，花了两个晚上搞了出来，确实Python好多东西生疏了，有空得多写写。此外的一个经验是多功能开发必须得分部测试各个功能，不能一次就写好，不然bug会让人无从下手。</p>
<p><strong>最后，参考资料</strong>：</p>
<ul>
<li><a href="http://open.weibo.com/" target="_blank" rel="external">微博开放平台</a></li>
<li><a href="http://github.liaoxuefeng.com/sinaweibopy/" target="_blank" rel="external">廖雪峰-Python微博SDK</a></li>
<li><a href="http://www.eoeandroid.com/thread-333874-1-1.html" target="_blank" rel="external">中国天气API接口</a></li>
<li><a href="http://www.cnblogs.com/GentlemanMod/p/3263531.html" target="_blank" rel="external">Python调用API发微博</a></li>
<li><a href="http://tool.lu/crontab/" target="_blank" rel="external">iBox在线工具</a></li>
</ul>
<hr>
<p><strong>Jas0ndyq敬上</strong></p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>好吧，说是机器人太装逼了，其实就是一个通过微博定时发送天气的python脚本。嘻嘻～</p>
</blockquote>
<p><strong>先说微博地址@w4vv <a href="http://weibo.com/w4vv" target="_blank" rel="external">http://weibo.com/w4vv</a></strong>，取”weather for vivian”之意，欢迎围观。</p>
<h1 id="开发原因">开发原因</h1>
<p>我们知道，先前已经有IFTTT为我们实现了定时的微博天气预报，为啥我还蛋疼地自己写一个呢？（当然不是为了装逼）很<strong>直接的原因</strong>就是IFTTT实现的是不可编程的静态微博天气推送，也就是，我无法根据天气的情况来发送对应的信息，比如，今天哈尔滨零下30度，IFTTT的微博脚本实现的只是单纯的报告温度，而没有对应的我对薇薇的关怀～</p>
]]>
    
    </summary>
    
      <category term="Python" scheme="http://jas0n.me/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[给薇薇搭建Ghost博客]]></title>
    <link href="http://jas0n.me/2014/12/05/ghost_blog/"/>
    <id>http://jas0n.me/2014/12/05/ghost_blog/</id>
    <published>2014-12-05T12:25:58.000Z</published>
    <updated>2014-12-19T11:56:34.000Z</updated>
    <content type="html"><![CDATA[<p>我又来了，哈哈哈</p>
<h1 id="00，初衷">00，初衷</h1>
<p>薇薇喜欢写东西，大家都是知道的了，而且写的东西都挺好的（我这种渣渣，你懂的）。但是呢，她的文章都是发表在QQ空间，新浪博客这些地方，而这些地方受到的不管是内容上还是形式上的约束都比较多。另一方面，这些地方的内容精度还是不够高，考虑到后期薇薇万一在文字界或者法律领域火了呢。我就想需要一个独立博客，让薇薇可以写任何她想写的内容，同时保证平台的独立和权威。我给自己搭的这个<a href="http://jas0n.me" target="_blank" rel="external">博客</a>只能算是练练手，一个重要的目的还是给薇薇搭建一个体验更好的独立博客。<br>那么问题来了，博客平台哪家强？</p>
<a id="more"></a>

<h1 id="01，为什么是Ghost博客系统">01，为什么是Ghost博客系统</h1>
<p>选择这个博客系统主要有以下几点考虑：</p>
<h3 id="1-简单">1.简单</h3>
<p>说这个博客系统简单是从内到外的简单，如果你懂点node.js，你就会发现这个博客系统，在博客系统模板的构建上用了JS和HTML更为分离的<code>Handlebars</code>语法（点击这个<a href="http://handlebarsjs.com/expressions.html" target="_blank" rel="external">链接</a>查看<code>Handlebars</code>语法文档）。在主题的表现上尤其如此，你可以参考<a href="http://docs.ghostchina.com/zh/themes/" target="_blank" rel="external">这篇文章</a>进行Ghost博客系统主题的开发。<br>简单同时表现在后台处理与博客写作的分离。你根本不需要任何网页开发的知识就能够保存并发表自己的博文，你甚至还可以邀请自己的好朋友一起进行写作（在博客管理界面就可以看到）。</p>
<h3 id="2-酷">2.酷</h3>
<p>说这个博客系统酷是因为这个博客系统是完全免费的，同时也是完全开源的；在写作方面，对<code>markdown</code>语法的支持也是相很好的。如果你是开发者，完全可以在<a href="https://github.com/TryGhost/Ghost/graphs/contributors" target="_blank" rel="external">像这些人一样为此博客系统做出贡献</a>，你也可以<a href="https://github.com/TryGhost/Ghost" target="_blank" rel="external">点击这个链接查看一切关于Ghost博客系统的源代码</a>。如果你只想<strong>很酷地写作</strong>，你只需要学习几个简单的<code>markdown</code>语法符号（几个标点而已，<a href="http://docs.ghostchina.com/zh/usage/writing/" target="_blank" rel="external">点击这个链接学习吧</a>），就可以完全上手这种高效率且新潮的写作方式。</p>
<h3 id="3-前景">3.前景</h3>
<p>Ghost博客系统无疑是一个很新的东西，到它向公众开放到现在（2014年12月5日），也才不过一年多一个月，而它的版本号还是0.5.5。但这并不意味着，它是一个很low的东西。看看它的开发者就知道了</p>
<blockquote>
<p>Ghost 是基于 Node.js 的开源博客平台，由前 WordPress UI 部门主管 <a href="http://john.onolan.org/" target="_blank" rel="external">John O’Nolan</a> 和 WordPress 高级工程师（女） <a href="http://erisds.co.uk/" target="_blank" rel="external">Hannah Wolfe</a> 创立，目的是为了给用户提供一种更加纯粹的内容写作与发布平台。</p>
</blockquote>
<p> 在我看来，这货的出现就是朝着替代WordPres(点击<a href="http://zh.wikipedia.org/zh/WordPress" target="_blank" rel="external">这个链接</a>了解WordPress)这个大厂的目标去的。而从它的开发路线图来看，开发团队对Ghost博客系统更是寄予厚望，后期甚至有开发移动端管理平台（也就是一个app来管理）的计划。你完全可以在<a href="https://github.com/TryGhost/Ghost/wiki/Planned-Features" target="_blank" rel="external">这个页面看到它的路线图</a>。</p>
<h3 id="4-名字好听">4.名字好听</h3>
<p>难道不觉得么？Ghost，我大使命召唤的绝对配角，真心碉堡，嘻嘻。</p>
<h3 id="5-与其他博客系统比较">5.与其他博客系统比较</h3>
<p>在我熟悉的几个博客系统中，最酷的就是<a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>了，其次还有什么<a href="http://jekyllrb.com/" target="_blank" rel="external">Jekyll</a>，还有也是前文提到的著名的WordPress。这些博客系统中，Hexo和Jekyll这类型的博客系统在写文章或者发布的过程中都需要配置环境和使用命令行工具；而对于WordPress这类的成熟的博客系统，我个人认为十分的臃肿，虽然它的配置部署是可选的，但总是感觉差点什么东西，那种feel，你懂的。</p>
<hr>
<h1 id="02，在本地搭建Ghost博客系统的流程">02，在本地搭建Ghost博客系统的流程</h1>
<ol>
<li>配置<code>node.js</code>环境；</li>
<li>下载Ghost博客系统；</li>
<li>安装并运行Ghost博客系统。</li>
</ol>
<p>出于不罗嗦的严格的自我要求，我直接附上中文文档的链接：</p>
<p>Windows：<a href="http://docs.ghostchina.com/zh/installation/windows/" target="_blank" rel="external">http://docs.ghostchina.com/zh/installation/windows/</a><br>Mac：<a href="http://docs.ghostchina.com/zh/installation/mac/" target="_blank" rel="external">http://docs.ghostchina.com/zh/installation/mac/</a><br>Linux：<a href="http://docs.ghostchina.com/zh/installation/linux/" target="_blank" rel="external">http://docs.ghostchina.com/zh/installation/linux/</a></p>
<p><strong>需要十分注意的是</strong>：在Windows下配置<code>node.js</code>环境一定要在<a href="http://nodejs.org/" target="_blank" rel="external">官方网站</a>上下载最新版本的安装程序。</p>
<p>一切安装好后，你就可以在自己电脑上的浏览器输入<code>http://localhost:2368</code>访问你的博客啦。</p>
<p>当然这都是本地的，一般都用来调试，如果你想让你的博客能够被别人访问，那么就看接下来的步骤吧。else，Mac/Linux点最左上方的按钮，Windows点最右上方的按钮，谢谢。</p>
<hr>
<h1 id="03，在服务器上部署Ghost博客系统">03，在服务器上部署Ghost博客系统</h1>
<p>现在一般有两种方案供选择：</p>
<h3 id="第一，部署到Coding这类的PaaS平台。">第一，部署到<a href="http://coding.io" target="_blank" rel="external">Coding</a>这类的<a href="http://zh.wikipedia.org/zh/%E5%B9%B3%E5%8F%B0%E5%8D%B3%E6%9C%8D%E5%8A%A1" target="_blank" rel="external">PaaS</a>平台。</h3>
<p>如果你想要使用自己的域名，可能需要多交钱，但目前（2015年之前）Coding正在提供免费的使用服务，并提供北京或者香港的空间供你使用。据我的理解，他们应该是后期只会收取你在香港空间部署的使用自己域名的博客的钱，每月29元；但不会收取，你不需要自己绑定域名的博客的钱（或者只适用于北京的空间）。之所以这么认为，是因为，Coding这个网站是归根结底还是一个代码托管网站，如果最基本不带顶级域名的展示平台都要收费的话，岂不是很没有竞争力。</p>
<p> 至于如何部署到Coding，你可以参见<a href="https://coding.net/u/tayuo/p/Ghost-On-Coding-Paas/git" target="_blank" rel="external">这个页面</a>。</p>
<hr>
<p><em>以下内容需要你有基本的Linux操作技能，如果不是，请忽视并使用PaaS平台配置</em></p>
<h3 id="第二，部署到自己的VPS服务器。">第二，部署到自己的VPS服务器。</h3>
<ul>
<li>购买VPS服务器；</li>
<li>购买域名；</li>
<li>配置<code>node.js</code>环境；</li>
<li>下载Ghost博客系统；</li>
<li>配置Ghost博客系统</li>
</ul>
<p>1，vps服务器<br>我使用的是<a href="http://www.hi-vps.com/" target="_blank" rel="external">hi-vps</a>家的服务，一年299元的使用XEN技术的Linux VPS，ping值一般能够达到200ms，还算不错了，价格也比较经济，也是看到v2上的推荐来这家买的。</p>
<p>2，域名<br><a href="https://www.godaddy.com/" target="_blank" rel="external">Godaddy</a>进行的.me域名注册购买，一年也就60多块钱。</p>
<p>3，配置<code>node.js</code>环境<br>和本地配置没区别</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sudo apt-<span class="built_in">get</span> install <span class="keyword">python</span>-software-properties </div><div class="line">sudo apt-<span class="built_in">add</span>-repository <span class="keyword">pp</span><span class="variable">a:chris</span>-lea/node.js </div><div class="line">sudo apt-<span class="built_in">get</span> <span class="keyword">update</span> </div><div class="line">sudo apt-<span class="built_in">get</span> install nodejs</div></pre></td></tr></table></figure>

<p>4，安装Ghost博客系统</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">sudo</span> mkdir -p /var/www</div><div class="line"><span class="built_in">cd</span> /var/www</div><div class="line"><span class="built_in">sudo</span> wget 下载地址（推荐http://www.ghostchina.com/download/这里选择）</div><div class="line"><span class="built_in">sudo</span> unzip 下载的压缩文件</div><div class="line"><span class="built_in">sudo</span> npm install</div></pre></td></tr></table></figure>

<p>5，配置Ghost配置文件<br>找到解压后<code>/var/www</code>目录下的config.js文件，打开并编辑</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">url: <span class="string">'http://mysite.com'</span>,</div><div class="line"><span class="keyword">server</span>: {</div><div class="line">    host: <span class="string">'mysite.com'</span>,</div><div class="line">    port: <span class="string">'80'</span></div><div class="line">}</div></pre></td></tr></table></figure>

<p>更改为上述内容。</p>
<p>6，让博客一直运行<br>在<code>/var/www</code>目录下<br><code>npm install forever -g</code>安装<code>forever</code>插件<br>以下命令对应不同功能：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">一直运行：NODE_ENV=production forever start <span class="built_in">index</span>.js</div><div class="line">停止：forever <span class="keyword">stop</span> <span class="built_in">index</span>.js</div><div class="line">检查是否运行：forever <span class="keyword">list</span></div></pre></td></tr></table></figure>

<p><strong>至此，你就应该配置好了</strong><br>之所以如此简洁，是因为我假定如果你看到了这一步应该是有一定的Linux服务器操作经验，所以不需要介绍。当然，你也可以在<a href="http://docs.ghostchina.com/zh/installation/deploy/" target="_blank" rel="external">这个页面</a>查看到相关教程。<br><strong>需要注意的是</strong>，在使用<code>Nginx</code>进行代理的时候，请先调试好Ghost博客能否运行，按基本步骤部署下来也会由抽风的情况，一步搞完根本无法排查错误（经验之谈）。此外，许多人都推荐使用<code>MySQL</code>替换<code>SQLite</code>，我觉得没有必要，<strong>如果你不熟悉，千万不要去改数据库，一步错，步步错。</strong></p>
<h1 id="04，结语">04，结语</h1>
<p>连续搞了几个晚上，今天终于所有的都搞完了，挺开心的。希望薇薇没事能多写写，哈哈哈。<br>后续的计划是，时间充裕了改改代码增加夜间模式，然后等待文章归档功能出来后把标签云放到文章列表上方，其他的想到了再搞吧。</p>
<blockquote>
<p>对于搞网站的来说，每一个margin和padding你都要仔细考虑。</p>
</blockquote>
<p>这是我这几天想到的。</p>
<h2 id="致谢和参考资料">致谢和参考资料</h2>
<p><strong>感谢：</strong><br>Ghost博客开发者：<a href="http://john.onolan.org/" target="_blank" rel="external">John O’Nolan</a>和<a href="http://erisds.co.uk/" target="_blank" rel="external">Hannah Wolfe</a><br>Ghost博客<a href="https://github.com/TryGhost/Ghost/graphs/contributors" target="_blank" rel="external">开源社区贡献者</a><br><a href="https://github.com/jas0ndyq/vno" target="_blank" rel="external">Vno主题</a>：作者<a href="http://weibo.com/onevcat" target="_blank" rel="external">onecat</a>，在此基础上，我才能进行很小的修改和适配<br><a href="http://coding.io" target="_blank" rel="external">Coding</a>：提供了优质的托管平台<br><a href="http://www.qiniu.com/" target="_blank" rel="external">七牛云存储</a>：提供了免费图片存储空间和服务<br><a href="http://weibotuchuang.sinaapp.com/" target="_blank" rel="external">微博图床修复计划</a><br><a href="http://www.v2ex.com" target="_blank" rel="external">V2EX</a><br>……</p>
<p><strong>参考资料：</strong><br><a href="http://docs.ghostchina.com/zh/" target="_blank" rel="external">Ghost使用指南</a><br><a href="http://docs.ghostchina.com/zh/themes/" target="_blank" rel="external">主题开发指南</a><br><a href="http://nodejs.org/" target="_blank" rel="external">node.js官方网站</a><br><a href="http://nodejs.org/" target="_blank" rel="external">维基百科-markdown</a></p>
<hr>
<p><strong>Jas0ndyq敬上</strong></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>我又来了，哈哈哈</p>
<h1 id="00，初衷">00，初衷</h1>
<p>薇薇喜欢写东西，大家都是知道的了，而且写的东西都挺好的（我这种渣渣，你懂的）。但是呢，她的文章都是发表在QQ空间，新浪博客这些地方，而这些地方受到的不管是内容上还是形式上的约束都比较多。另一方面，这些地方的内容精度还是不够高，考虑到后期薇薇万一在文字界或者法律领域火了呢。我就想需要一个独立博客，让薇薇可以写任何她想写的内容，同时保证平台的独立和权威。我给自己搭的这个<a href="http://jas0n.me" target="_blank" rel="external">博客</a>只能算是练练手，一个重要的目的还是给薇薇搭建一个体验更好的独立博客。<br>那么问题来了，博客平台哪家强？</p>
]]>
    
    </summary>
    
      <category term="分享" scheme="http://jas0n.me/tags/%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用“影梭”，为你的iOS设备实现全局代理]]></title>
    <link href="http://jas0n.me/2014/11/12/up_14_11_12/"/>
    <id>http://jas0n.me/2014/11/12/up_14_11_12/</id>
    <published>2014-11-12T14:34:00.000Z</published>
    <updated>2014-12-19T11:56:36.000Z</updated>
    <content type="html"><![CDATA[<h2 id="背景">背景</h2>
<p>“用Shadowsocks来实现iOS设备的全局代理”，这个想法出现了好久，也听说了越狱后可以实现此功能。但看着好多大神也只是模棱两可没有给出具体解法，我也就没怎么上心去搞这个。有趣的是这两天在玩Ubuntu，昨天上午发现Shadowsocks图形客户端在Linux下有些问题，遂看了看官方文档，弄好Linux的客户端后不经意间看到Shadowsocks的iOS客户端文档，发现这货的全局代理方式竟是如此简单，那些大神难道是因为觉得英语很复杂不给小白说这个功能了么，Orz。那么到底怎么搞，我们来分析下思路~</p>
<a id="more"></a>

<p><strong>在这之前先介绍下Shadowsocks</strong></p>
<p>咳咳，这货呢，叫Shadowsocks，中文名影梭（好吧~直译的），它是</p>
<blockquote>
<p>一个可穿透防火墙的轻量代理。</p>
</blockquote>
<p>也就是一个轻量级的翻墙工具。运行原理请参见<a href="http://zh.wikipedia.org/zh-cn/Shadowsocks" target="_blank" rel="external">维基百科相关页面</a>。<br>同时，它也是一个开源工具，关于“影梭”的一切你都可以在<a href="https://github.com/clowwindy/shadowsocks/wiki/Shadowsocks-%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E" target="_blank" rel="external">GitHub相关页面</a>找到。</p>
<p><strong>实现iOS设备全局代理的思路</strong><br><em>思路1</em>：</p>
<ul>
<li>在iOS设备安装Shadowsocks app。</li>
<li>为iOS设备设置全局代理。</li>
<li>为Shadowsocks app设置后台常驻。</li>
</ul>
<p><em>思路2</em>：</p>
<ul>
<li>越狱安装shadowsocks完整版</li>
<li>配置shadowsocks在应用内的服务</li>
</ul>
<p><strong>两种思路的比较</strong><br>第一种是使用在app stroe上架的应用来进行操作，优点是可以直接使用，无需自己配置服务器；<br>第二种是使用越狱后的版本，优点表面上不用是一个app常驻后台，缺点是需要自己配置服务器。</p>
<p><em>说明</em></p>
<p>1.Shadowsocks app作为一个在苹果应用商店上架的应用，它必须遵循苹果应用的相关规定，即后台不能常驻，也就是说在不越狱的情况下，它</p>
<blockquote>
<p>Only works for a few minutes. Due to iOS restrictions, Shadowsocks can’t keep running in the background. It’s killed after you leave it for a while. To keep it running for an extended period of time, you have to come back to the Shadowsocks app every few minutes.</p>
</blockquote>
<p>所以，我们进行完美体验的前提是你的iOS设备已经越狱。如果你的设备没有越狱，你只有在按照以下教程操作好了过后几分钟（大都在10分钟内）<br>再次打开Shadowsocks app。</p>
<p>2.Shadowsocks作为一个代理服务，它一般需要在服务端进行配置，一般的用户并不拥有一个支持Shadowsocks的服务器。不过好在Shadowsocks的支持社区相当成熟，它们提供免费的服务来支持和推广Shadowsocks的服务。而我们将要使用的Shadowsocks app也会根据情况为你分配相关服务器。当然免费的服务器稳定性和速度肯定会差一点，但已经很够用了。如果你想配置你的私有服务器，请加入相关社区进行进一步学习。</p>
<p>3.目前仅支持Wi-Fi下的全局代理服务。</p>
<h1 id="00，准备工作">00，准备工作</h1>
<ul>
<li>iOS设备（未越狱，各个版本均可）</li>
<li>iOS设备（越狱，我们使用的插件目前支持到iOS7）</li>
<li>Shadowsocks iOS App <a href="https://itunes.apple.com/us/app/shadowsocks/id665729974?ls=1&amp;mt=8" target="_blank" rel="external">点我下载</a></li>
<li>插件Background Manager</li>
<li>插件shadowsocks和shadowsocks per-app plugin</li>
</ul>
<h1 id="01，安装Shadowsocks_iOS_App，并在Wi-Fi选项中设置代理">01，安装Shadowsocks iOS App，并在Wi-Fi选项中设置代理</h1>
<p>首先，我们打开App Store，搜索到Shadowsocks<br><img src="http://img04.taobaocdn.com/imgextra/i4/665732193/TB2dzpAbXXXXXX3XXXXXXXXXXXX_!!665732193.png" alt=""></p>
<p>下载、安装后发现，出现了一个纸飞机的图标，就是它啦~<br><img src="http://img03.taobaocdn.com/imgextra/i3/665732193/TB2cFJAbXXXXXanXXXXXXXXXXXX_!!665732193.png" alt=""></p>
<p>打开它，我们看到的应该是一个类似于浏览器的东西，而这也是这个Shadowsocks做这个app的主要功能。在这个浏览器里，你就能够实现代理了，但我们要做的是全局代理，所以我们继续。看到右边的选项按钮，打开之，可以看到一些选项，都可以打开看看。<br><img src="http://img02.taobaocdn.com/imgextra/i2/665732193/TB2Oe8zbXXXXXaTXXXXXXXXXXXX_!!665732193.png" alt=""><br>而这里，我们打开选项这一栏看看。发现，这正是我们要找的服务器配置所在地。而前面已经说了，我们可以直接使用Shadowsocks社区的代理服务，所以根本不需要我们的配置。<br><img src="http://img02.taobaocdn.com/imgextra/i2/665732193/TB2AoZHXpXXXXbPXpXXXXXXXXXX_!!665732193.png" alt=""><br>如果你有自己的服务器，你可以选择自行按如下方式配置。<br><img src="http://img03.taobaocdn.com/imgextra/i3/665732193/TB2ZUgqXVXXXXcLXpXXXXXXXXXX_!!665732193.png" alt=""><br>至此，我们已经完成了对app的配置。（好吧，根本没有配置好么~）<br>接下来，我们进行全局代理设置。我们打开设置—Wi-Fi一栏，点开右边那个感叹号设置按钮。<br><img src="http://img02.taobaocdn.com/imgextra/i2/665732193/TB2Ik0AbXXXXXadXXXXXXXXXXXX_!!665732193.png" alt=""><br>找到下面HTTP代理的设置项，将其设置为<strong>自动</strong>，并填写如下代理地址<br><code>http://127.0.0.1:8090/proxy.pac</code><br><img src="http://img02.taobaocdn.com/imgextra/i2/665732193/TB277VqbXXXXXaPXpXXXXXXXXXX_!!665732193.png" alt=""><br>然后点击上面Wi-Fi返回，这时候，会出现一两秒的配置时间，你所连接的WiFi会出现loading画面（也就是转菊花），完成后会自动连上Wi-Fi。<br>至此，我们已经设置好了全局代理的配置。想尝鲜的同学打开Safari或者Twitter、Facebook、YouTube的客户端就发现，卧槽，真特么可以。<br>在Safari下自然是可以的<br><img src="http://img04.taobaocdn.com/imgextra/i4/665732193/TB2r4XzbXXXXXa2XXXXXXXXXXXX_!!665732193.png" alt="Safari"><br>在各个客户端下表现也不错<br><img src="http://img02.taobaocdn.com/imgextra/i2/665732193/TB2gslxbXXXXXcsXXXXXXXXXXXX_!!665732193.png" alt="Twitter"><br><img src="http://img02.taobaocdn.com/imgextra/i2/665732193/TB2TxSeXpXXXXXNXFXXXXXXXXXX_!!665732193.png" alt="instagram"><br><img src="http://img04.taobaocdn.com/imgextra/i4/665732193/TB2O_drbXXXXXaAXpXXXXXXXXXX_!!665732193.png" alt="u2b"></p>
<p><strong>目前，我们已经完成了配置，功能是可以使用的。</strong>但正如前文所说，由于iOS自身的限制和Shadowsocks app代理方式的限制，我们必须得让Shadowsocks app一直保持开启才可以实现全局代理。如果通常十分钟以后iOS就会自动退出后台的一些第三方应用，那么Shadowsocks app自然也会被退出。这就导致了我们需要过一会就去打开一次Shadowsocks app，平时刷刷推特还是可以接受，但强迫症肯定很不爽，所以我们就得使用一个插件来让这个app，在我使用我的设备期间一直保持运行。</p>
<hr>
<p><em><del>iOS8及</del>未越狱设备请忽略以下内容</em></p>
<h1 id="02-1，安装background_manager，并配置好后台运行规则。">02-1，安装background manager，并配置好后台运行规则。</h1>
<p>安装插件的前提是我们的iOS设备必须越狱并运行完好。<br>首先，在Cydia里搜索background manager<br><img src="http://img03.taobaocdn.com/imgextra/i3/665732193/TB2gb0ubXXXXXc0XXXXXXXXXXXX_!!665732193.png" alt=""><br>正版的此插件需要6元进行购买，但目前对支付宝的支持还不是很好，我们选择在178源（后面给出地址）里进行安装（体验无罪，但请尽量支持正版）。<br><img src="http://img01.taobaocdn.com/imgextra/i1/665732193/TB2YcxybXXXXXbOXXXXXXXXXXXX_!!665732193.png" alt=""><br>你也可以一并选择威锋技术组出品的汉化补丁<br><img src="http://img03.taobaocdn.com/imgextra/i3/665732193/TB2L9BAbXXXXXafXXXXXXXXXXXX_!!665732193.png" alt=""><br>一并安装完成后，respring注销下即可进入主界面。<br>然后，我们在设置里找到相关项目-后台运行管理器<br><img src="http://img03.taobaocdn.com/imgextra/i3/665732193/TB2JdxtbXXXXXX1XpXXXXXXXXXX_!!665732193.png" alt=""><br>打开之~<br><img src="http://img04.taobaocdn.com/imgextra/i4/665732193/TB29d8CbXXXXXcIXXXXXXXXXXXX_!!665732193.png" alt=""><br>选择指定应用设置，并选择添加项目<br><img src="http://img04.taobaocdn.com/imgextra/i4/665732193/TB2K1lCbXXXXXbMXXXXXXXXXXXX_!!665732193.png" alt=""><br>添加Shadowsocks到该规则<br><img src="http://img02.taobaocdn.com/imgextra/i2/665732193/TB2Xr8wbXXXXXXhXpXXXXXXXXXX_!!665732193.png" alt=""><br>返回发现，该规则目录下已经出现Shadowsocks一则，并注明后台规则还是原生<br><img src="http://img04.taobaocdn.com/imgextra/i4/665732193/TB2HgBubXXXXXXrXpXXXXXXXXXX_!!665732193.png" alt=""><br>点击Shadowsocks，发现的确为原生的后台模式<br><img src="http://img01.taobaocdn.com/imgextra/i1/665732193/TB2puFCbXXXXXbeXpXXXXXXXXXX_!!665732193.png" alt=""><br>我们进行选择，选择“后台”一栏<br><img src="http://img04.taobaocdn.com/imgextra/i4/665732193/TB22tBBbXXXXXX1XXXXXXXXXXXX_!!665732193.png" alt=""><br>然后返回，发现，当前后台规则已经变为“后台”<br><img src="http://img01.taobaocdn.com/imgextra/i1/665732193/TB22T8sbXXXXXXBXpXXXXXXXXXX_!!665732193.png" alt=""><br>而至此，我们已经完成了使Shadowsocks app常驻后台的配置工作，你也可以对background manager插件继续进行相关样式的设置，请自行探索。<br><img src="http://img01.taobaocdn.com/imgextra/i1/665732193/TB25K0ubXXXXXc2XXXXXXXXXXXX_!!665732193.png" alt=""></p>
<p>完成配置后，我们可以返回重新打开Shadowsocks app，然后就会发现，在我们使用Shadowsocks app进行全局代理时，只要不自行退出后台，我们的全局代理会一直进行下去，即使你进行了<strong>锁屏操作</strong>。当然，由后台管理插件完成的服务必然会存在<strong>不稳定</strong>因素，也可能会导致<strong>机身发热量增加</strong>，<strong>电池消耗过快</strong>等问题，这就仁者见仁智者见智了哈~</p>
<h1 id="02-2，cydia内安装shadowsocks和shadowsocks_per-app_plugin，并配置好服务器">02-2，cydia内安装shadowsocks和shadowsocks per-app plugin，并配置好服务器</h1>
<p><strong>注意：这个操作并不需要在app store内下载相关应用，我们在cydia内下载相关插件</strong><br>首先，在cydia内搜索shadowsocks<br><img src="http://img03.taobaocdn.com/imgextra/i3/665732193/TB25mvHbXXXXXbdXXXXXXXXXXXX_!!665732193.png" alt=""><br>我们就可以看到我们需要的两个插件，免费。然后下载、安装即可。<br>安装后，打开安装的插件，注意，我们在桌面只能看到一个叫“影梭”的图标，打开它<br><img src="http://img04.taobaocdn.com/imgextra/i4/665732193/TB2zh_IbXXXXXbUXXXXXXXXXXXX_!!665732193.png" alt=""><br>点击启用代理，配置好你的shadowsocks服务器地址和加密方式<br><img src="http://img03.taobaocdn.com/imgextra/i3/665732193/TB2_0fGbXXXXXaJXpXXXXXXXXXX_!!665732193.png" alt=""><br>然后就可以设置应用内代理了，点击“应用内代理”<br><img src="http://img03.taobaocdn.com/imgextra/i3/665732193/TB29tYIbXXXXXXTXXXXXXXXXXXX_!!665732193.png" alt=""><br>点进去就进入了插件per-app的设置界面<br><img src="http://img01.taobaocdn.com/imgextra/i1/665732193/TB2I5LGbXXXXXaeXpXXXXXXXXXX_!!665732193.png" alt=""><br>我们点击启用，并禁用SPDY协议（原因它说得很清楚）。然后打开下方的绕行模式，并在“应用程序里”开启我们不需要走shadowsocks代理的应用即可。<strong>注意，这里的应用程序开启的是不走代理的程序，注意区分。</strong></p>
<h1 id="03，后续和致谢">03，后续和致谢</h1>
<p><strong>关于app和插件的版权问题</strong>，请大家尽可能地从App Store下载应用程序，从bigboss源等正版源下载插件，支持正版。后续越狱社区会增加插件购买对支付宝的支持力度，所以更没有理由去选择一些盗版源。体验的话也可以，但如果真的觉得好，就应该为之付费，更何况也就几块钱的事情。</p>
<p><strong>关于翻墙工具的问题</strong>，有心的同学可以发现，有一些翻墙工具完全是一些反共团体开发制作的，比如“自由门”。我认为，如果你有需求，你应该选择一些客观的工具去观察外面的世界，而开源社区为之做出了很大的努力和贡献。我们希望自由，但有时候却被一些人引向了另一个极端，这很不好，真的很不好。</p>
<p><strong>关于Shadowsocks</strong>，“影梭”不光可以在iOS端进行代理，更多的是用在桌面端，相关文档官方的项目说明已经很明确，我就不再进行说明。</p>
<p><strong>致谢</strong></p>
<ul>
<li>感谢无偿为Shadowsocks制作和宣传做出贡献的开源社区成员</li>
<li>感谢无偿为Shadowsocks社区分享服务器的服务器所有者</li>
<li>感谢越狱社区Background Manager作者<a href="http://devbug.me" target="_blank" rel="external">deVbug</a></li>
<li>感谢越狱社区Shadowsocks和Per-App Plugin插件的贡献者 Linus Yang</li>
<li>感谢威锋技术组<a href="http://weibo.com/cdsq?from=inf&amp;wvr=5&amp;loc=infdomain" target="_blank" rel="external">CDSQ</a>汉化</li>
</ul>
<h1 id="04，参考资料">04，参考资料</h1>
<ul>
<li><a href="https://github.com/shadowsocks/shadowsocks-iOS/wiki/Help" target="_blank" rel="external">Shadowsocks for iOS支持文档</a></li>
<li><a href="https://github.com/clowwindy/shadowsocks/wiki/Shadowsocks-%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E" target="_blank" rel="external">Shadowsocks 项目地址</a></li>
<li><a href="http://zh.wikipedia.org/zh-cn/Shadowsocks" target="_blank" rel="external">维基百科-Shadowsocks</a></li>
<li>178源-apt.178.com</li>
<li>威锋精品源- repo.feng.com</li>
</ul>
<hr>
<p><strong>愿这个世界更美好</strong></p>
<p><strong>Jas0ndyq敬上</strong></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="背景">背景</h2>
<p>“用Shadowsocks来实现iOS设备的全局代理”，这个想法出现了好久，也听说了越狱后可以实现此功能。但看着好多大神也只是模棱两可没有给出具体解法，我也就没怎么上心去搞这个。有趣的是这两天在玩Ubuntu，昨天上午发现Shadowsocks图形客户端在Linux下有些问题，遂看了看官方文档，弄好Linux的客户端后不经意间看到Shadowsocks的iOS客户端文档，发现这货的全局代理方式竟是如此简单，那些大神难道是因为觉得英语很复杂不给小白说这个功能了么，Orz。那么到底怎么搞，我们来分析下思路~</p>
]]>
    
    </summary>
    
      <category term="分享" scheme="http://jas0n.me/tags/%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[从今天起，保存你的“深夜食堂”]]></title>
    <link href="http://jas0n.me/2014/10/04/up_14_10_4/"/>
    <id>http://jas0n.me/2014/10/04/up_14_10_4/</id>
    <published>2014-10-04T06:18:58.000Z</published>
    <updated>2015-03-25T05:13:19.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p><strong>生活总是为一些突然的小点子所美好</strong><br><em>——我说的</em> ^_^</p>
</blockquote>
<p>喜欢用Pocket来保存我喜欢的文章，以前也跟风用过印象笔记（反正我觉得不好用，icon也丑得一逼），也喜欢用RSS来订阅博客或者其他站点的更新。而且，Pocket和RSS订阅的交互可以用IFTTT来联系。这种美好组合一直到我遇见知乎日报才结束，这货居然不提供RSS订阅。而其中，我最喜欢的一个栏目是<a href="http://youzhihu.com/section/1" target="_blank" rel="external">深夜食堂</a>，不管当时看不看，我都喜欢把它先存入我的Pocket，没事的时候可以看看。但是，要是我十天半月不去点开知乎日报的客户端，我特么就没办法存啊。。。然而，我总相信，能够有什么方法可以解决这个问题，也就产生了以下实践，共勉。<br><a id="more"></a></p>
<hr>
<p><strong>15年3月更新</strong>：<br>youzhihu.com这个网站已经停止服务，推荐使用<a href="http://miantiao.me/zhihu-daily-rss.html" target="_blank" rel="external">这个博主</a>提供的RSS进行订阅。</p>
<h1 id="00，准备工作">00，准备工作</h1>
<p>1，可用的深夜食堂HTML<a href="http://youzhihu.com/section/1" target="_blank" rel="external">地址</a><br>2，一个生成RSS链接的工具，<a href="http://feed43.com/" target="_blank" rel="external">Feed43</a><br>3，一个能够强制生成全文的RSS工具，<a href="http://feedex.net/" target="_blank" rel="external">FeedEx</a><br>4，IFTTT账户，<a href="https://ifttt.com/" target="_blank" rel="external">IFTTT</a><br>5，Pocket账户，<a href="http://getpocket.com/" target="_blank" rel="external">Pocket</a><br>6，基础HTML/CSS知识（小白无影响，可以自动忽略）<br><br></p>
<h1 id="01，找到地址">01，找到地址</h1>
<p>我们打开知乎日报客户端，找到深夜食堂，发现，卧槽，这货的地址是这种滴：<a href="http://www.zhihu.com/story/6546544。" target="_blank" rel="external">http://www.zhihu.com/story/6546544。</a><br>可以看出，“深夜食堂”这个内容是保存在story这个目录下的，但是我们点开<br><a href="http://www.zhihu.com/story" target="_blank" rel="external">http://www.zhihu.com/story</a><br>却会报错，也就是该目录是不允许访问的。那么这就需要第三方网站的支持了。</p>
<p>其实做知乎日报web版的有几个，这里，我选择的是一个V2EX上给我提供帮助的一个大哥/大姐写的网站——<a href="http://youzhihu.com/" target="_blank" rel="external">爱知乎</a>。这个网站分类内容中提供的“深夜食堂”的入口，访问<a href="http://youzhihu.com/section/1" target="_blank" rel="external">http://youzhihu.com/section/1</a> ，即可进入网页版“知乎日报-深夜食堂”。这里不研究该网站的实现方法，有兴趣请查看开源代码：<a href="https://github.com/nihgwu/iZhihu" target="_blank" rel="external">https://github.com/nihgwu/iZhihu</a> 。<br><br></p>
<h1 id="02，制作RSS地址">02，制作RSS地址</h1>
<p>RSS，聚合阅读，一般的地址是一个XML格式的页面，涵盖了标题、图片、内容等形式。RSS一直是一种方便和个性化的的工具，推荐大家使用这个工具来个性化自己的阅读内容。</p>
<p>制作RSS地址，我们使用<a href="http://feed43.com/" target="_blank" rel="external">Feed43</a>和<a href="http://feedex.net/" target="_blank" rel="external">FeedEx</a>。<br><strong>1，制作一个初步的地址</strong><br>打开<a href="http://feed43.com/" target="_blank" rel="external">Feed43</a>，注册一个账户，激活后点击Creat your own feed<br><img src="http://img03.taobaocdn.com/imgextra/i3/665732193/TB2XjeFaFXXXXbLXpXXXXXXXXXX_!!665732193.png" alt=""></p>
<p>step1：如图所示，输入你要创建RSS的站点地址<br><img src="http://img03.taobaocdn.com/imgextra/i3/665732193/TB2mJWMaFXXXXXCXpXXXXXXXXXX_!!665732193.png" alt=""><br>点击reload/load会加载该站点的HTML代码</p>
<p>step2：分分析代码并添加搜索规则<br>加载完成后，在看见的HTML代码中<br><img src="http://img02.taobaocdn.com/imgextra/i2/665732193/TB2lOSVaFXXXXXoXXXXXXXXXXXX_!!665732193.png" alt=""><br>我们发现，主要内容的格式为div-a-img-aside-span这样，我们只需要把其中的动态内容用%、其他内容用 “<em>**</em>“这样的通配符进行匹配就可以完成建立地址的搜索规则。<br><img src="http://img01.taobaocdn.com/imgextra/i1/665732193/TB28BuDaFXXXXbDXpXXXXXXXXXX_!!665732193.png" alt=""><br>所以，我的这个RSS搜索规则如上所示，复制粘贴一断div代码，然后在链接处，时间、标题处修改为”%”符号，在句末换行处添加”*”通配符。点击Extract即可显示出来匹配的内容<br><img src="http://img01.taobaocdn.com/imgextra/i1/665732193/TB2CpuKaFXXXXbnXpXXXXXXXXXX_!!665732193.png" alt=""></p>
<p>step3：RSS地址订阅显示规则<br>我们可以自定义该地址的标题、链接、内容的显示规则<br><img src="http://img04.taobaocdn.com/imgextra/i4/665732193/TB2TuaVaFXXXXXlXXXXXXXXXXXX_!!665732193.png" alt=""><br>我们把匹配出来的%1-%4进行分析，将标题、链接、内容对应填进去<br><img src="http://img02.taobaocdn.com/imgextra/i2/665732193/TB28zCHaFXXXXbnXpXXXXXXXXXX_!!665732193.png" alt=""><br>点击Preview即可查看该RSS地址的效果<br><img src="http://img04.taobaocdn.com/imgextra/i4/665732193/TB2.NuNaFXXXXcQXXXXXXXXXXXX_!!665732193.png" alt=""></p>
<p>step4：自定义链接地址<br>由于Feed43提供自定义子目录名称，所以，我们可以自己修改RSS地址<br><img src="http://img03.taobaocdn.com/imgextra/i3/665732193/TB2pvuRaFXXXXarXXXXXXXXXXXX_!!665732193.png" alt=""><br>我的这个地址就为<a href="http://feed43.com/zhihustory.xml" target="_blank" rel="external">http://feed43.com/zhihustory.xml</a></p>
<p><strong>2，制作全文输出RSS地址</strong><br>由于功能上的限制，Feed43并不支持全文输出（或者是我没有发现），所以我们得使用另外的工具进行输出，这里，我选择的是<a href="http://feedex.net/" target="_blank" rel="external">FeedEx</a>。<br>点击进入feedex，输入刚刚我们建立好的RSS网址<a href="http://feed43.com/zhihustory.xml" target="_blank" rel="external">http://feed43.com/zhihustory.xml</a><br><img src="http://img02.taobaocdn.com/imgextra/i2/665732193/TB29BeDaFXXXXcOXpXXXXXXXXXX_!!665732193.png" alt=""><br>点击Go!即可生成一个强制全文输出的RSS地址。<br>虽然这个地址有点长，但是可用的。<br><br></p>
<h1 id="03，使用IFTTT来自动保存我的“知乎日报-深夜食堂”更新">03，使用IFTTT来自动保存我的“知乎日报-深夜食堂”更新</h1>
<p>我们打开<a href="https://ifttt.com/" target="_blank" rel="external">IFTTT</a>，注册一个账户，打开<a href="https://ifttt.com/channels" target="_blank" rel="external">Channels</a>这个栏目<br><img src="http://img01.taobaocdn.com/imgextra/i1/665732193/TB2hW1NaFXXXXc8XXXXXXXXXXXX_!!665732193.png" alt=""><br>搜索Pocket<br><img src="http://img04.taobaocdn.com/imgextra/i4/665732193/TB2VZiJaFXXXXaxXpXXXXXXXXXX_!!665732193.png" alt=""><br>进入Pocket，进行Pocket和IFTTT的账户授权。这个过程和微博的授权差不多，就不详细讲了。<br>授权完成后如下所示<br><img src="http://img03.taobaocdn.com/imgextra/i3/665732193/TB26YuPaFXXXXbKXXXXXXXXXXXX_!!665732193.png" alt=""><br>现在，回到<a href="https://ifttt.com/myrecipes/personal" target="_blank" rel="external">My Recipes</a>栏目<br><img src="http://img04.taobaocdn.com/imgextra/i4/665732193/TB2y.9HaFXXXXaZXpXXXXXXXXXX_!!665732193.png" alt=""><br>点击Creat a Recipe<br>看见ifthisthenthat(这就是IFTTT的由来)的页面<br><img src="http://img03.taobaocdn.com/imgextra/i3/665732193/TB2H4KOaFXXXXckXXXXXXXXXXXX_!!665732193.png" alt=""><br>点击this<br><img src="http://img04.taobaocdn.com/imgextra/i4/665732193/TB2aM9IaFXXXXaFXpXXXXXXXXXX_!!665732193.png" alt=""><br>选择feed，再选择默认的第一个项目，只要有内容更新就进行操作<br><img src="http://img03.taobaocdn.com/imgextra/i3/665732193/TB2jo1GaFXXXXbDXpXXXXXXXXXX_!!665732193.png" alt=""></p>
<p>输入我们刚刚制作好的全文RSS地址<br><img src="http://img02.taobaocdn.com/imgextra/i2/665732193/TB2S8KTaFXXXXabXXXXXXXXXXXX_!!665732193.png" alt=""></p>
<p>OK！再来弄that<br><img src="http://img03.taobaocdn.com/imgextra/i3/665732193/TB2CeqRaFXXXXaSXXXXXXXXXXXX_!!665732193.png" alt=""></p>
<p>和this类似，我们选择Pocket<br><img src="http://img04.taobaocdn.com/imgextra/i4/665732193/TB2pXyOaFXXXXcRXXXXXXXXXXXX_!!665732193.png" alt=""></p>
<p>再选择默认的aciton<br><img src="http://img03.taobaocdn.com/imgextra/i3/665732193/TB2C8aMaFXXXXXzXpXXXXXXXXXX_!!665732193.png" alt=""></p>
<p>再选择保存的项目，我们保存的内容如图所示，使用”+”进行添加删减，为了自动归类，为tag增加深夜食堂这一项。点击Creat Action。<br><img src="http://img04.taobaocdn.com/imgextra/i4/665732193/TB2ux9IaFXXXXaMXpXXXXXXXXXX_!!665732193.png" alt=""></p>
<p>好了，我们的的自动化就完成啦，在下边点击接收通知，装一个手机、平板上装一个IFTTT客户端就可以接收到保存的推送啦。<br><img src="http://img02.taobaocdn.com/imgextra/i2/665732193/TB2NSSGaFXXXXbbXpXXXXXXXXXX_!!665732193.png" alt=""><br><img src="http://img02.taobaocdn.com/imgextra/i2/665732193/TB2CgiMaFXXXXXEXpXXXXXXXXXX_!!665732193.png" alt=""></p>
<p>最后回到主页面，我们看到的应该是这样。<br><img src="http://img04.taobaocdn.com/imgextra/i4/665732193/TB25M1IaFXXXXaDXpXXXXXXXXXX_!!665732193.png" alt=""><br>如果更新了，你会获得推送，就像这样滴<br><img src="http://img01.taobaocdn.com/imgextra/i1/665732193/TB25LyQaFXXXXbGXXXXXXXXXXXX_!!665732193.png" alt=""><br>然后就等着今晚的深夜食堂更新吧。。。LOL<br><br></p>
<h1 id="04，后续">04，后续</h1>
<p><strong>关于IFTTT</strong><br>IFTTT这个工具是很强大的，每个人都有不同的玩法，你也可以去看看自己的玩法，像我，就用来推送薇薇的私人博客更新~及时了解她的想法~~~嘿嘿。不过，由于在墙内，有许多整合墙外社交媒体的功能不能使用，同时IFTTT的推送有也可能延迟几分钟到十几分钟不等（也可能是iOS系统后台刷新时间的限制）。</p>
<p><strong>关于这个RSS订阅的方法</strong><br>其实在学爬虫的时候，我就很想自己写一个小程序来实现这个功能，也写了一个非常简单的抓取每日知乎日报热点内容的Python<a href="https://github.com/jas0ndyq/Zhihu_Daily" target="_blank" rel="external">小程序</a>，但是最终我还是发现使用别现成的HTML站点能够让事情更简单（好吧，是我嫌太麻烦）。后面会尝试在自己的博客上架设一个“深夜食堂”的页面出来。</p>
<p><strong>关于知乎</strong><br>知乎最近确实水了，不过就像我以前文章里说的，只有自己不断地增加自己的知识储备，才能认清别人是在忽悠，是在装逼还是在认真地回答问题。要回答一个问题是有成本的，要看一个答案怎么样也是有成本的。</p>
<p><strong>关于“知乎日报-深夜食堂”</strong><br>这个栏目我觉得好，是因为我喜欢听别人讲故事。我相信大多数的故事是真的，我相信美好也相信黑暗。<br><br></p>
<h1 id="05，参考资料">05，参考资料</h1>
<ul>
<li>知乎日报<a href="https://github.com/izzyleung/ZhihuDailyPurify/wiki/%E7%9F%A5%E4%B9%8E%E6%97%A5%E6%8A%A5-API-%E5%88%86%E6%9E%90" target="_blank" rel="external">API分析</a></li>
<li>知乎日报-<a href="http://zhuanlan.zhihu.com/daily/19765673" target="_blank" rel="external">深夜食堂特辑上线</a></li>
<li>小众软件-<a href="http://www.appinn.com/feed43/" target="_blank" rel="external">Feed43介绍及使用</a></li>
<li>维基：<a href="http://zh.wikipedia.org/zh/IFTTT" target="_blank" rel="external">IFTTT</a></li>
<li>维基：<a href="http://zh.wikipedia.org/zh/RSS" target="_blank" rel="external">RSS</a></li>
</ul>
<h2><br></h2>
<p>更新：<br>1，经过两天的测试，发现该<a href="http://youzhihu.com/section/1" target="_blank" rel="external">站点的“深夜食堂”栏目</a>有些不稳定，会偶尔出现没有抓取到的情况，这是该站点的问题，我会联系作者尽快解决。<br><del>2，顺便做了一个“瞎扯-如何正确的吐槽”的全文RSS输出：<a href="http://feedex.net/feed/feed43.com/tucao.xml" target="_blank" rel="external">http://feedex.net/feed/feed43.com/tucao.xml</a><br>3，上次居然忘了写“深夜食堂”的全文输出地址，真是惭愧，现在补上：<a href="http://feedex.net/feed/feed43.com/zhihustory.xml" target="_blank" rel="external">http://feedex.net/feed/feed43.com/zhihustory.xml</a></del></p>
<hr>
<p><strong>就这样吧，互联网给生活带来的改变不光是阅读方式上的，还是创造方式上的。生活总是可以有许多的点子，好的点子会让你感受到美好。</strong></p>
<p><strong>Jas0ndyq敬上</strong></p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p><strong>生活总是为一些突然的小点子所美好</strong><br><em>——我说的</em> ^_^</p>
</blockquote>
<p>喜欢用Pocket来保存我喜欢的文章，以前也跟风用过印象笔记（反正我觉得不好用，icon也丑得一逼），也喜欢用RSS来订阅博客或者其他站点的更新。而且，Pocket和RSS订阅的交互可以用IFTTT来联系。这种美好组合一直到我遇见知乎日报才结束，这货居然不提供RSS订阅。而其中，我最喜欢的一个栏目是<a href="http://youzhihu.com/section/1" target="_blank" rel="external">深夜食堂</a>，不管当时看不看，我都喜欢把它先存入我的Pocket，没事的时候可以看看。但是，要是我十天半月不去点开知乎日报的客户端，我特么就没办法存啊。。。然而，我总相信，能够有什么方法可以解决这个问题，也就产生了以下实践，共勉。<br>]]>
    
    </summary>
    
      <category term="分享" scheme="http://jas0n.me/tags/%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[不翻墙使用谷歌]]></title>
    <link href="http://jas0n.me/2014/09/20/up_14_9_20/"/>
    <id>http://jas0n.me/2014/09/20/up_14_9_20/</id>
    <published>2014-09-20T05:19:57.000Z</published>
    <updated>2014-12-19T11:56:38.000Z</updated>
    <content type="html"><![CDATA[<h1 id="Google怎么了">Google怎么了</h1>
<p>今年五六月份的时候，习惯使用谷歌来进行搜索的同志们都应该经历了这个事件——<a href="http://zh.wikipedia.org/wiki/2014%E5%B9%B4%E4%B8%AD%E5%9B%BD%E5%A4%A7%E9%99%86%E5%B1%8F%E8%94%BD%E8%B0%B7%E6%AD%8C%E6%9C%8D%E5%8A%A1%E4%BA%8B%E4%BB%B6" target="_blank" rel="external">谷歌全球服务器被长城网屏蔽</a>。中国政府出于维稳需要屏蔽了大部分的谷歌服务器，导致我们使用谷歌搜索严重不畅。而<a href="http://zh.wikipedia.org/wiki/%E9%98%B2%E7%81%AB%E9%95%BF%E5%9F%8E" target="_blank" rel="external">长城网</a>在中国虽然一直没有被政府所承认，但这是大多数网民都知道的事情。今天的重点不讨论“长城网”，说说怎么在<a href="https://www.google.com.hk/" target="_blank" rel="external">Google中国</a>无法正常使用的时候使用谷歌搜索。<br><a id="more"></a></p>
<h1 id="访问谷歌的方法">访问谷歌的方法</h1>
<p>-直接访问谷歌服务器ip地址<br>-通过工具软件进行vpn代理操作(这里不推荐任何VPN商家，需要请自行谷歌)<br>-使用<a href="https://code.google.com/p/goagent/" target="_blank" rel="external">GoAgent</a>一劳永逸</p>
<p>以上方法都是较为简单粗暴，基本没有学习成本的方法，但是既然说的是不翻墙使用谷歌，就选择第一种方法进行说明</p>
<h1 id="使用谷歌全球ip访问谷歌搜索服务">使用谷歌全球ip访问谷歌搜索服务</h1>
<p><br></p>
<h2 id="原理"><strong>原理</strong></h2>
<p>周知的是，谷歌搜索是整个世界的主流搜索服务（虽然在中国经历的诸多不愉快），想要更精确的搜索专业内容，谷歌无疑是最好的选择。这样也就给谷歌服务器带来了极大的压力，故，谷歌需要在各个国家设置诸多的镜像服务器来分流及提高搜索体验。通常情况下长城网只屏蔽了大多数经常使用的服务器ip地址，同时谷歌的<a href="http://zh.wikipedia.org/wiki/Google%E5%AE%A1%E6%9F%A5#.E4.B8.AD.E5.9B.BD.E5.A4.A7.E9.99.86" target="_blank" rel="external">审查机制</a>也会针对部分国内ip的敏感词搜索采取措施。我们要做的也就是尽量找到这些服务器ip地址，进而找到能使用的服务器地址。</p>
<h2 id="操作——以g-cn为例"><strong>操作——以g.cn为例</strong></h2>
<p>使用ping的方法，ping出域名服务器地址。我们使用<a href="http://ping.chinaz.com/" target="_blank" rel="external">站长工具的ping服务</a>，也可以在运行—cmd-ping g.cn进行操作。在工具中，我们输入：g.cn<br><img src="http://img03.taobaocdn.com/imgextra/i3/665732193/TB2jVomapXXXXbXXXXXXXXXXXXX_!!665732193.png" alt=""><br>即可返回查询结果，响应ip就是我们要找的ip地址，通常情况下，直接输入ip地址即可访问谷歌搜索国内服务器（在输入项为g.cn时）。</p>
<h2 id="操作——开源社区的成果"><strong>操作——开源社区的成果</strong></h2>
<p>刚刚我们ping出来的g.cn是国内的服务器ip地址，在几个月以前，这些地址都是可以用的，不幸的是，我们的科研工作者总是能够奋战在维护GFW的前线，他们告诉他们的首长，“放心首长，我们保证一个苍蝇也飞不出去~~”。说笑了，虽然近期越来越多的谷歌ip被封死，但总是有一些漏网之鱼（故意的？我猜是吧~）。这个开源<a href="https://github.com/Playkid/Google-IPs" target="_blank" rel="external">项目提供了几乎所有的谷歌服务器ip地址</a>，涵盖多个国家，原理都是使用查询服务器ip区间的方法，也可以像刚刚一样ping出来。遗憾的是，许多已经被GFW封锁，但还是有不少可以用，这就需要自己去探索了。<br>以下是几个可用的ip地址：<br>-<a href="http://209.116.186.231" target="_blank" rel="external">http://209.116.186.231</a> 美国<br>-<a href="http://173.194.72.160" target="_blank" rel="external">http://173.194.72.160</a> 美国<br>-<a href="http://74.125.206.160" target="_blank" rel="external">http://74.125.206.160</a> 美国<br>-<a href="http://203.116.165.138" target="_blank" rel="external">http://203.116.165.138</a> 新加坡<br>-<a href="http://91.213.30.151" target="_blank" rel="external">http://91.213.30.151</a> 西班牙<br>-待续…</p>
<h2 id="后续——增强易用性——以Chrome浏览器为例"><strong>后续——增强易用性——以Chrome浏览器为例</strong></h2>
<p>首先，我们打开Chrome浏览器的“设置”<br><img src="http://img02.taobaocdn.com/imgextra/i2/665732193/TB2xh3gapXXXXaVXpXXXXXXXXXX_!!665732193.png" alt=""></p>
<p>然后，打开“管理搜索引擎”，找到“其他搜索引擎”<br><img src="http://img03.taobaocdn.com/imgextra/i3/665732193/TB2nSUmapXXXXboXXXXXXXXXXXX_!!665732193.png" alt=""></p>
<p>然后在<br>“添加新的搜索引擎”栏里，写入Google（或者其他你喜欢的名字）<br>“关键词”栏里，写入Google.com（或者其他你喜欢的字符）<br>“网址”栏里，写入你选择的ip地址加上”#newwindow=1&amp;q=%s”（比如：”<a href="http://209.116.186.231/#newwindow=1&amp;q=%s&quot;）。" target="_blank" rel="external">http://209.116.186.231/#newwindow=1&amp;q=%s&quot;）。</a><br><img src="http://img04.taobaocdn.com/imgextra/i4/665732193/TB2srobapXXXXbjXpXXXXXXXXXX_!!665732193.png" alt=""></p>
<p><strong>需要说明的是：</strong><br>%s代表你搜索的字符串，也就是你搜索框的内容。例如：你要搜索”jas0n.me”，你搜索框中输入”jas0n.me”，搜索引擎就会自动将%s换为”jas0n.me”。<br><img src="http://img04.taobaocdn.com/imgextra/i4/665732193/TB2ir3rapXXXXaaXXXXXXXXXXXX_!!665732193.png" alt=""></p>
<h2 id="后续——一个站点内搜索技巧"><strong>后续——一个站点内搜索技巧</strong></h2>
<p>我们经常会出现像搜索一个站点内的内容，比如看看某某人的博客里有哪些文章，但这人的博客又没有提供站内搜索功能，我们就可以利用搜索引擎进行搜索操作。在搜索框中填入”site:jas0n.me 我们”就可以搜索我的个人博客中带有字符”我们”的文章了。这种方法同样适用于其他搜索引擎。<br><strong>需要注意的是</strong>：站点和你搜索的内容之间需要空格占位，不然可能报错<br><img src="http://img03.taobaocdn.com/imgextra/i3/665732193/TB2c9ssapXXXXXvXXXXXXXXXXXX_!!665732193.png" alt=""></p>
<h1 id="结语">结语</h1>
<p>写这样一篇文章还是源于上学期一个老师在抱怨查资料的时候谷歌却不能用了，当时我就给了她一个谷歌在国内的ip地址，后来也被封了。其实授人以鱼不如授人以渔，这个非常简单的方法说给大家，你可以选择这个方法自己去搞，也可以直接用我ping出来的几个地址，不能用了我也会更新。</p>
<p><strong>关于逼格</strong><br>有很多人认为使用谷歌就是在装逼，其实你如果真的需要专业的资料，你可能会发现百度找了一大圈还是这样<br><img src="http://img02.taobaocdn.com/imgextra/i2/665732193/TB2F.IlapXXXXbwXXXXXXXXXXXX_!!665732193.png" alt=""><br>多的就不说了，专业性方面，谁用谁知道。相信你接触过互联网，自己也会有锁体会的。</p>
<hr>
<p><strong>参考资料：</strong></p>
<ul>
<li><a href="https://support.google.com/a/answer/60764?hl=zh-Hans" target="_blank" rel="external">Google Support：关于Google IP地址的说明</a></li>
<li><a href="http://www.jianshu.com/p/0370e80c8381" target="_blank" rel="external">简书：Google，你肿么了！Google，你快回来！（附各种姿势)</a></li>
<li><a href="http://zh.wikipedia.org/zh/%E8%B0%B7%E6%AD%8C%E4%B8%AD%E5%9B%BD" target="_blank" rel="external">维基：谷歌中国</a></li>
<li><a href="http://zh.wikipedia.org/wiki/%E9%98%B2%E7%81%AB%E9%95%BF%E5%9F%8E" target="_blank" rel="external">维基：防火长城</a></li>
</ul>
<hr>
<p><strong>Jas0ndyq敬上</strong></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="Google怎么了">Google怎么了</h1>
<p>今年五六月份的时候，习惯使用谷歌来进行搜索的同志们都应该经历了这个事件——<a href="http://zh.wikipedia.org/wiki/2014%E5%B9%B4%E4%B8%AD%E5%9B%BD%E5%A4%A7%E9%99%86%E5%B1%8F%E8%94%BD%E8%B0%B7%E6%AD%8C%E6%9C%8D%E5%8A%A1%E4%BA%8B%E4%BB%B6" target="_blank" rel="external">谷歌全球服务器被长城网屏蔽</a>。中国政府出于维稳需要屏蔽了大部分的谷歌服务器，导致我们使用谷歌搜索严重不畅。而<a href="http://zh.wikipedia.org/wiki/%E9%98%B2%E7%81%AB%E9%95%BF%E5%9F%8E" target="_blank" rel="external">长城网</a>在中国虽然一直没有被政府所承认，但这是大多数网民都知道的事情。今天的重点不讨论“长城网”，说说怎么在<a href="https://www.google.com.hk/" target="_blank" rel="external">Google中国</a>无法正常使用的时候使用谷歌搜索。<br>]]>
    
    </summary>
    
      <category term="分享" scheme="http://jas0n.me/tags/%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[试着让这个世界更美好]]></title>
    <link href="http://jas0n.me/2014/09/09/my-first-post/"/>
    <id>http://jas0n.me/2014/09/09/my-first-post/</id>
    <published>2014-09-09T14:46:57.000Z</published>
    <updated>2014-09-11T14:27:24.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p><em>我们站在这个荒凉的世界上， 我们是廿世纪的众生骚动在它的黑暗里， 我们有机器和制度却没有文明， 我们有复杂的感情却无处归依， 我们有很多的声音而没有真理， 我们来自一个良心却各自藏起。</em><br>——穆旦</p>
</blockquote>
<p>原谅我低俗地用一个名人名言来开这个头，在这个我个人博客的第一篇文章。我读书不多，甚至不知道穆旦是何许人，但很喜欢这句话。也把这句话再一次的送给你们，思考。</p>
<p><a id="more"></a><br>说说我要写自己独立博客的原因。</p>
<h2 id="初衷">初衷</h2>
<p>或者你们说的初心，但我单纯的反感这个鸡汤词，就不用了~<br>我的初衷是在互联网上留下自己的印记。作为普通的互联网用户，我希望我的东西能够一直留在我的页面上，即使若干年后我死去了，我的孩子也能够得到这个叫“数字遗产”的东西，而不是把<a href="http://tech.sina.com.cn/i/2013-04-12/09548233867.shtml" target="_blank" rel="external">主动权交给谷歌</a>。作为一个互联网爱好者，我希望我的想法能够在一个相对独立自由的地方进行展示，也就是能够装一个像样的逼，而不是在微博微信QQ进行刷屏。看到这里，好多QQ好友松了一口气~，这点后面详细说。</p>
<p><br></p>
<h2 id="思想的记录">思想的记录</h2>
<p>好吧，<a href="http://zh.wikipedia.org/zh/%E6%80%9D%E6%83%B3" target="_blank" rel="external">思想</a>太装逼，也可以叫作想法。几年前，我还习惯于写日记，记录下一些想法思考，甚至写到过怎么派兵解放台湾，遗憾的在QQ空间的审核机器上整篇文章都是特么的敏感词。当然那时候审核机器还很傻比的认为“解放军”和“解 放 军”<br>是不一样滴，然后我就插入了空格。。。内心极度鄙视开发审核的人，真逗~<br>如此，能不能有一个绝对独立自由的平台，来记录自己的想法观点呢，所以我就写了这个博客~~~<br>逗比，当然不是这样的，记录想法只是一个功能，我一直认为记录什么的Word写写也不错，重要的是文字、内容本身，而不是形式。就好像本来air可以实现的功能，你偏觉得pro好看要用pro，又不是公司配的，用的还是爸妈的钱，装个卵啊，说的好像用了pro就能生产出更厉害的东西一样~</p>
<p><br></p>
<h2 id="观点的成本">观点的成本</h2>
<p><a href="http://zh.wikipedia.org/zh/Web_2.0" target="_blank" rel="external">web2.0</a>用户核心时代，社交媒体就像受到改革开放的春风滋润了一样如春笋般涌现。<br>你迫不及待地申请了一个QQ号码，生怕别人联系不上你，到处和人交换QQ号，看着一个8位数的QQ号，自卑感悠然而生，心里想着，“装什么B，不就是少一位吗，又没什么意义”，过一会又拿到一个傻吊的QQ号“1028686068”，然后想着，“卧槽，号码不错，不过这傻逼10位数的号码太落后了吧，不知道从哪个山里来的~”<br>你听说了新浪微博、腾讯微博、网易微博、逗比微博，你申请一大波微博，关注了一大波带着橙V蓝V还有AV的用户。好像，你跟着薛蛮子叫着民主，跟着杜海涛跪着韩流，跟着我讨论下手机就能体现自己的档次一样。<br>不仅这样，当你发现了还有特么的微信朋友圈的时候，你就更牛逼了。<br>你骂着贪官，鄙视着小三，点着不要钱的gif蜡烛，送着一蹦一跳的月饼，心里很是欣慰，我的朋友居然给我发信息祝我中秋节快乐。<br>你去了国外，不经意间发条说说，加州的佛罗里达真冷啊，穿厚点。<br>你骑行了汶川，终于到了，大骂破车老子再也不骑了，回头继续刷着微博唱着歌。<br>你第一次坐飞机了，买的底价机票，兴奋地又不经意间发了朋友圈抱怨一下川航的伙食真差，还是国航的好。<br>你又看到了“紧急通知，转给你的朋友吧，这些东西千万别吃”，高潮了，比自己亲妈生病了还着急地转发在朋友圈。<br>你分期付款买了一台爱疯5S，下了一个QQ空间，弄了个黄钻将小尾巴变成了“来自高端大气上档次的iPhone5s”。<br>夜深了，你睡不着，听歌吧，酷我音乐？怎么可能，你都是用豆瓣音乐人。<br>还是睡不着，刷刷新闻吧，你用的又是“有态度”的网易新闻客户端，必须用啊，客观公正还有趣。<br>后来，你从同学朋友口中听说了<a href="http://www.zhihu.com" target="_blank" rel="external">知乎</a>，你去看了看，还不错，你这么时尚的人当然得马上注册个账号，加一下自己的好友，对比一下得到的赞。</p>
<h6 id="失落、激动你循环着情感，你以为世界都是你的，你追求着伟大的自由和民主，你就是时代的先锋，伟大的键盘斗士！！">失落、激动你循环着情感，你以为世界都是你的，你追求着伟大的自由和民主，你就是时代的先锋，伟大的键盘斗士！！</h6>
<p>好吧，你们理解观点成本是什么意思了么，我自己给定义一下，发表观点的成本就是你在社交媒体上发言的学习成本和知识成本。在我眼中，客户端化的社交媒体学习成本足够低，我妈都能发一个说说祝“朋友们中秋快乐”，知识成本更不用说，社交媒体本来就不需要专门的知识，你随便发点什么都可以。存在即是合理，不合理的东西不可能用户量这么多。<br><em><a href="http://tech.qq.com/a/20140315/004999.htm" target="_blank" rel="external">微博用户数据</a><br><a href="http://tech.qq.com/a/20140412/000129.htm" target="_blank" rel="external">QQ用户数据</a></em><br>每个人都用社交媒体，但是你不能迷恋它。<br><a href="http://www.zhihu.com/question/20247229" target="_blank" rel="external">人们为什么要在微博、Facebook 等上发布自己的状态信息或者人生感悟？</a><br>另一方面，社交媒体对于圈子其他成员来说很大程度上是一种强制性的内容输入，比如，我会在苹果的DC大会和Specia Event大会时刷屏，那样对很多人造成了不便（果断拉黑我！），你感兴趣当然会欣然接受，不感兴趣的话，心里可能在骂着这个傻逼了吧。所以，我尝试使用这样一种方式让我输出的内容不是强制性的，若有兴趣，来这儿看看也好。</p>
<p>回到观点成本这个话题，我很喜欢<a href="http://www.v2ex.com" target="_blank" rel="external">V2EX</a>创始人的话：</p>
<blockquote>
<p>如果你热衷于去参与那些只要有电脑或者手机就可以回复，而不需要任何技术经验的主题，你实际上就是在浪费宝贵生命。然后你浪费完今天接着浪费明天，你的人生的一个又一个本来可以充满希望的明天就在这样的毫无意义的灌水中，灰飞烟灭。然后等你老了，内心只是充满了对这个社会的“不公平”的恨，却不记得自己在年轻的时候做过任何有意义的事。<br>——<em><a href="https://www.v2ex.com/member/Livid" target="_blank" rel="external">Livid</a></em></p>
</blockquote>
<p>你每天都花费大量的时间去迷茫，而不是去做事，你热衷于与全世界讨论锤子到底是不是“锤子”，你不去学习基础的知识<em><br>-<a href="http://zh.wikipedia.org/zh/%E5%B7%A5%E4%B8%9A%E8%AE%BE%E8%AE%A1" target="_blank" rel="external">工业设计</a><br>-<a href="http://baike.baidu.com/view/1365273.htm" target="_blank" rel="external">用户体验设计</a></em><br>而是去膜拜自如的评测，你习惯了用一种低成本甚至无成本的方式获取信息，你觉得无所谓，科技发展了难道还要我去学习汇编语言把机器逻辑都搞懂么？当然不需要，所以我说的是基础，基础知识是一种保证你不被忽悠的东西。而你、我，缺得太多了。<br><strong>这就是我写这个博客的核心目的——我的独立自由的观点发布平台<br>我只想在这里发布相对于社交平台上更好的内容，不是吐槽抱怨也不是装逼炫耀。</strong></p>
<p><br></p>
<h2 id="回报开源社区">回报开源社区</h2>
<p>感谢这个时代，真的，互联网时代为我们提供了绝佳的学习分享资源，你可以找到任何你想要学习的内容。我们能够做的就是不做伸手党，同时尽力回报开源社区。</p>
<p><br></p>
<h2 id="结语">结语</h2>
<p>你也是我，我们我更愿意去思考人们一些行为背后的原因，而不是去批判，所以就不要上纲上线啦~<br>这是我的一个独立博客，希望这个平台能监督我长久的做这件事，试着让这个世界更美好。<br>欢迎大家的访问交流，多提意见。</p>
<p><strong>关于这个博客</strong><br>这个博客使用一个开源node.js框架<a href="http://hexo.io/" target="_blank" rel="external">HEXO</a>搭建，使用这个框架的愿因主要还是可以解析到GitHub空间，免费又不限流量，能够让我更专注于内容。</p>
<hr>
<p><strong>Jas0ndyq敬上</strong></p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p><em>我们站在这个荒凉的世界上， 我们是廿世纪的众生骚动在它的黑暗里， 我们有机器和制度却没有文明， 我们有复杂的感情却无处归依， 我们有很多的声音而没有真理， 我们来自一个良心却各自藏起。</em><br>——穆旦</p>
</blockquote>
<p>原谅我低俗地用一个名人名言来开这个头，在这个我个人博客的第一篇文章。我读书不多，甚至不知道穆旦是何许人，但很喜欢这句话。也把这句话再一次的送给你们，思考。</p>
<p>]]>
    
    </summary>
    
      <category term="想法" scheme="http://jas0n.me/tags/%E6%83%B3%E6%B3%95/"/>
    
  </entry>
  
</feed>
